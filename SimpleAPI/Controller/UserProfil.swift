//
//  UserProfil.swift
//  ComprendreLesAPI
//
//  Created by Mathieu @theunknowman_80 29/05/2023.



//We have reached the last controller of the app. This controller allows us to retrieve various data from different users, which we initially configured in the models, specifically in the Decodable User struct. The use of a geocoder simply emits a map that centers on the country where the user would hypothetically live. For the age, we obviously need to create a function that converts an integer to a string, which is quite basic. As for the randomly generated number of followers, it is also straightforward. The button is there for decoration and displays an alert, but it turns out to be pointless in all cases. Regarding the segmented control, it uses five images that I simply added in the assets, so again, it's quite simple. This page is particularly interesting to observe how we associate data, especially from users randomly generated by an API.

import UIKit
import MapKit

class UserProfil: UIViewController {
    @IBOutlet weak var map: MKMapView!
    @IBOutlet weak var profilIv: UIImageView!
    @IBOutlet weak var nameLbl: UILabel!
    @IBOutlet weak var countryLbl: UILabel!
    @IBOutlet weak var phoneNumberLbl: UILabel!
    @IBOutlet weak var birthdayLbl: UILabel!
    @IBOutlet weak var numberFollowers: UILabel!
    @IBOutlet weak var segment: UISegmentedControl!
    @IBOutlet weak var segImageV: UIImageView!
    
    var user: User!
    var sendMail: UIAlertController?
    

    override func viewDidLoad() {
        super.viewDidLoad()
        updateMap()
        setup(user)
    }
    

    func setup(_ newProfil: User) {
        self.profilIv.image = UIImage(systemName: "person.circle.fill")
        user = newProfil
        ImageDownloader.shared.fromUrlString(user.picture.medium) { data in
            self.profilIv.image = data == nil ? UIImage(systemName: "person.circle.fill") : UIImage(data: data!)
        }
        self.nameLbl.text = "Hi üëã, i'm " + user.name.first + " " + user.name.last
        self.phoneNumberLbl.text = "Number :" + " " + user.cell
        self.birthdayLbl.text = "Age: " + convertIntToString(user.dob.age) + " years old"
        self.countryLbl.text = "Country : " + user.location.country
        self.profilIv.layer.cornerRadius = self.profilIv.frame.height / 2
        self.numberFollowers.text = convertIntToString(generateRandomFollowersCount()) + " followers"
    }
    
    
    
    func generateRandomFollowersCount() -> Int {
        let randomCount = Int.random(in: 0...200000)
        return randomCount
    }
    
    func convertIntToString(_ int: Int) -> String {
       return String(int)
    }
    
    func updateMap() {
        let geocoder = CLGeocoder()
        let countryName = user.location.country
        
        geocoder.geocodeAddressString(countryName) { (placemarks, error) in
            if let error = error {
                // Gestion de l'erreur de g√©ocodification
                print("Erreur de g√©ocodification : \(error.localizedDescription)")
                return
            }
            
            if let placemark = placemarks?.first,
               let countryCoordinate = placemark.location?.coordinate {
                // Utilisation des coordonn√©es du pays pour afficher la carte
                let span = MKCoordinateSpan(latitudeDelta: 0.02, longitudeDelta: 0.02)
                let region = MKCoordinateRegion(center: countryCoordinate, span: span)
                self.map.setRegion(region, animated: true)
            }
        }
    }
    
    @IBAction func segmentedValueChanged(_ sender: UISegmentedControl) {
        let selectedIndex = sender.selectedSegmentIndex
        switch selectedIndex {
        case 0: segImageV.image = UIImage(named: "prog")
        case 1: segImageV.image = UIImage(named: "drawing")
        case 2: segImageV.image = UIImage(named: "art")
        case 3: segImageV.image = UIImage(named: "apple")
        default: segImageV.image = UIImage(named: "ai")
        }
    }
    
    @IBAction func sendButtonPressed(_ sender: UIButton) {
            let controller = UIAlertController(title: "Send a message", message: "Are you sure ?", preferredStyle: .alert)
            
            let librairie = UIAlertAction(title: "Yes", style: .default) { action in
                if let sendMail = self.sendMail {
                    self.present(sendMail, animated: true, completion: nil)
                }
            }
            
            let annuler = UIAlertAction(title: "Finally, nope", style: .destructive, handler: nil)
            
            controller.addAction(librairie)
            controller.addAction(annuler)
            
            present(controller, animated: true, completion: nil)
        }
}
